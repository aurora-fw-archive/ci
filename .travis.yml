# ┌─┐┬ ┬┬─┐┌─┐┬─┐┌─┐  ┌─┐┬─┐┌─┐┌┬┐┌─┐┬ ┬┌─┐┬─┐┬┌─
# ├─┤│ │├┬┘│ │├┬┘├─┤  ├┤ ├┬┘├─┤│││├┤ ││││ │├┬┘├┴┐
# ┴ ┴└─┘┴└─└─┘┴└─┴ ┴  └  ┴└─┴ ┴┴ ┴└─┘└┴┘└─┘┴└─┴ ┴
# A Powerful General Purpose Framework
# More information in: https://aurora-fw.github.io/
#
# Copyright (C) 2017 Aurora Framework, All rights reserved.

language: cpp

matrix:
  allow_failures:
    - os: osx
    - compiler: clang
  include:
    - os: linux
      compiler: clang
      sudo: required
    - os: linux
      compiler: gcc
      sudo: required
    - os: osx
      compiler: gcc
    - os: osx
      compiler: clang

arch:
  packages:
    - gtk3
    - ninja
    - vulkan-headers
    - glfw-x11
    - glew
    - cmake
    - freeimage
    - libsndfile
    - portaudio
    - doxygen
    - repo
    - lcov
  script:
    - if [[ "$TRAVIS_BRANCH" == "dev" ]]; then yes | repo init -u https://github.com/aurora-fw/manifest.git -m development.xml -b dev; fi
    - if [[ "$TRAVIS_BRANCH" == "master" ]]; then yes | repo init -u https://github.com/aurora-fw/manifest.git -b $TRAVIS_BRANCH; fi
    - repo sync
    - if [[ "$TRAVIS_BRANCH" == "dev" ]]; then cmake -DCMAKE_BUILD_TYPE=Debug -DAURORA_BUILD_TEST_APPS=ON -DAURORA_TARGET_DOCUMENTATION=ON .; fi
    - if [[ "$TRAVIS_BRANCH" == "master" ]]; then cmake -DCMAKE_BUILD_TYPE=Release -DAURORA_TARGET_DOCUMENTATION=ON .; fi
    - make && sudo make install
    - make documentation

script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      curl -s https://raw.githubusercontent.com/aurora-fw/arch-travis/master/arch-travis.sh | bash;
    fi;

after_success:
  # Create lcov report
  - cd ${TRAVIS_BUILD_DIR}
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
      sudo apt-get update -qq;
      sudo apt-get install -y python lcov;
      sudo pip install codecov;
      sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 90;
    fi;
  - for filename in `find . | egrep '\.cpp'`; 
    do
      gcov-5 -n -o . $filename > /dev/null; 
    done
  - codecov
  #- lcov --directory . --capture --output-file coverage.info # capture coverage info
  #- lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  #- lcov --list coverage.info #debug info
  # Upload lcov report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

notifications:
  email:
    recipients:
      - auroraframework@gmail.com
  on_success: never
  on_failure: always
